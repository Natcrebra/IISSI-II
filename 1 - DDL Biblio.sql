DROP SEQUENCE SEC_AUTORIAS_OID;
DROP SEQUENCE SEC_RENOVACIONES_OID;
DROP SEQUENCE SEC_DEVOLUCIONES_OID;
DROP SEQUENCE SEC_PRESTAMOS_OID;
DROP SEQUENCE SEC_AUTORES_OID;
DROP SEQUENCE SEC_LIBROS_OID;
DROP SEQUENCE SEC_USUARIOS_OID;
DROP SEQUENCE SEC_PROVINCIAS_OID;
DROP SEQUENCE SEC_MUNICIPIOS_OID;
DROP SEQUENCE SEC_GENEROS_OID;

DROP TABLE AUTORIAS;
DROP TABLE RENOVACIONES;
DROP TABLE DEVOLUCIONES;
DROP TABLE PRESTAMOS;
DROP TABLE AUTORES;
DROP TABLE LIBROS;
DROP TABLE GENEROSUSUARIOS;
DROP TABLE USUARIOS;
DROP TABLE MUNICIPIOS;
DROP TABLE GENEROS;
DROP TABLE PROVINCIAS;
DROP VIEW VISTA_AUTORIAS;



CREATE TABLE PROVINCIAS (
	NOMBRE VARCHAR2(25) NOT NULL,
	OID_PROVINCIA INTEGER NOT NULL,
	PRIMARY KEY (OID_PROVINCIA) );

CREATE TABLE MUNICIPIOS (
	NOMBRE VARCHAR2(200) NOT NULL,
	OID_PROVINCIA INTEGER NOT NULL,	
	OID_MUNICIPIO INTEGER NOT NULL,
	FOREIGN KEY (OID_PROVINCIA) REFERENCES PROVINCIAS(OID_PROVINCIA),
	PRIMARY KEY (OID_MUNICIPIO) );
	
CREATE TABLE USUARIOS (
	NIF VARCHAR2(10) NOT NULL UNIQUE,
	NOMBRE VARCHAR2(25) NOT NULL,
	APELLIDOS VARCHAR2(75),
	DIRECCION VARCHAR2(75) NOT NULL,
	OID_MUNICIPIO INTEGER NOT NULL,
	EMAIL VARCHAR2(75) NOT NULL UNIQUE,
	PASS VARCHAR2(75) NOT NULL,
	FECHA_NACIMIENTO DATE,
	PERFIL VARCHAR2(10) CHECK ( PERFIL IN ('PDI','PAS','ALUMNO') ) NOT NULL,
	FOREIGN KEY (OID_MUNICIPIO) REFERENCES MUNICIPIOS(OID_MUNICIPIO),
	OID_USUARIO INTEGER NOT NULL,
	PRIMARY KEY (OID_USUARIO) );
	
CREATE TABLE GENEROS (	
	NOMBRE VARCHAR2(25), 
	OID_GENERO INTEGER NOT NULL,
  	PRIMARY KEY(OID_GENERO));

CREATE TABLE GENEROSUSUARIOS (	
 	USUARIO INTEGER, 
	GENERO INTEGER,
  	PRIMARY KEY(GENERO, USUARIO),
  	FOREIGN KEY (USUARIO) REFERENCES USUARIOS(OID_USUARIO),
  	FOREIGN KEY (GENERO) REFERENCES GENEROS(OID_GENERO));
  
CREATE TABLE AUTORES (
	NOMBRE VARCHAR2(25) NOT NULL,
	APELLIDOS VARCHAR2(75) NOT NULL,
	OID_AUTOR INTEGER NOT NULL,
	PRIMARY KEY (OID_AUTOR)	);

CREATE INDEX INDICE_AUTORES ON AUTORES(APELLIDOS,NOMBRE);	

CREATE TABLE LIBROS (
	TITULO VARCHAR2(100) NOT NULL,
	OID_LIBRO INTEGER NOT NULL,
  GENERO INTEGER NOT NULL,
	PRIMARY KEY (OID_LIBRO), 
  FOREIGN KEY (GENERO) REFERENCES GENEROS(OID_GENERO) );
	
CREATE TABLE AUTORIAS (
	OID_LIBRO INTEGER NOT NULL,
	OID_AUTOR INTEGER NOT NULL,
	FOREIGN KEY (OID_LIBRO) REFERENCES LIBROS(OID_LIBRO),
	FOREIGN KEY (OID_AUTOR) REFERENCES AUTORES(OID_AUTOR), 
	OID_AUTORIA INTEGER NOT NULL,
	PRIMARY KEY (OID_AUTORIA) );

CREATE TABLE PRESTAMOS (
	FECHA DATE NOT NULL,
	FECHA_PREVISTA DATE NOT NULL,
	OID_LIBRO INTEGER NOT NULL,
	OID_USUARIO INTEGER NOT NULL,
	FOREIGN KEY (OID_LIBRO) REFERENCES LIBROS(OID_LIBRO),
	FOREIGN KEY (OID_USUARIO) REFERENCES USUARIOS(OID_USUARIO),
	OID_PRESTAMO INTEGER NOT NULL,
	PRIMARY KEY (OID_PRESTAMO) );

CREATE TABLE RENOVACIONES (
	FECHA DATE NOT NULL,
	OID_PRESTAMO INTEGER NOT NULL,
	FOREIGN KEY (OID_PRESTAMO) REFERENCES PRESTAMOS(OID_PRESTAMO),
	OID_RENOVACION INTEGER NOT NULL,
	PRIMARY KEY (OID_RENOVACION) );
	
CREATE TABLE DEVOLUCIONES (
	FECHA DATE NOT NULL,
	OID_PRESTAMO INTEGER NOT NULL,
	FOREIGN KEY (OID_PRESTAMO) REFERENCES PRESTAMOS(OID_PRESTAMO),
	OID_DEVOLUCION INTEGER NOT NULL,
	PRIMARY KEY (OID_DEVOLUCION) );
	
CREATE SEQUENCE SEC_AUTORIAS_OID
START WITH 1 INCREMENT BY 1 NOMAXVALUE;

CREATE SEQUENCE SEC_LIBROS_OID
START WITH 1 INCREMENT BY 1 NOMAXVALUE;

CREATE SEQUENCE SEC_AUTORES_OID
START WITH 1 INCREMENT BY 1 NOMAXVALUE;

CREATE SEQUENCE SEC_USUARIOS_OID
START WITH 1 INCREMENT BY 1 NOMAXVALUE;

CREATE SEQUENCE SEC_GENEROS_OID
START WITH 1 INCREMENT BY 1 NOMAXVALUE;

CREATE SEQUENCE SEC_PROVINCIAS_OID
START WITH 1 INCREMENT BY 1 NOMAXVALUE;

CREATE SEQUENCE SEC_MUNICIPIOS_OID
START WITH 1 INCREMENT BY 1 NOMAXVALUE;

CREATE SEQUENCE SEC_PRESTAMOS_OID
START WITH 1 INCREMENT BY 1 NOMAXVALUE;

CREATE SEQUENCE SEC_RENOVACIONES_OID
START WITH 1 INCREMENT BY 1 NOMAXVALUE;

CREATE SEQUENCE SEC_DEVOLUCIONES_OID
START WITH 1 INCREMENT BY 1 NOMAXVALUE;

CREATE OR REPLACE TRIGGER INSERTAR_AUTORIA_OID
BEFORE INSERT ON AUTORIAS
REFERENCING NEW AS NEW
FOR EACH ROW
BEGIN
  SELECT SEC_AUTORIAS_OID.NEXTVAL INTO :NEW.OID_AUTORIA FROM DUAL;
END;
/
CREATE OR REPLACE TRIGGER INSERTAR_LIBRO_OID
BEFORE INSERT ON LIBROS
REFERENCING NEW AS NEW
FOR EACH ROW
BEGIN
  SELECT SEC_LIBROS_OID.NEXTVAL INTO :NEW.OID_LIBRO FROM DUAL;
END;
/
CREATE OR REPLACE TRIGGER INSERTAR_AUTOR_OID
BEFORE INSERT ON AUTORES
REFERENCING NEW AS NEW
FOR EACH ROW
BEGIN
  SELECT SEC_AUTORES_OID.NEXTVAL INTO :NEW.OID_AUTOR FROM DUAL;
END;
/
CREATE OR REPLACE TRIGGER INSERTAR_USUARIO_OID
BEFORE INSERT ON USUARIOS
REFERENCING NEW AS NEW
FOR EACH ROW
BEGIN
  SELECT SEC_USUARIOS_OID.NEXTVAL INTO :NEW.OID_USUARIO FROM DUAL;
END;
/
CREATE OR REPLACE TRIGGER INSERTAR_PRESTAMO_OID
BEFORE INSERT ON PRESTAMOS
REFERENCING NEW AS NEW
FOR EACH ROW
BEGIN
  SELECT SEC_PRESTAMOS_OID.NEXTVAL INTO :NEW.OID_PRESTAMO FROM DUAL;
END;
/
CREATE OR REPLACE TRIGGER INSERTAR_GENERO_OID
BEFORE INSERT ON GENEROS
REFERENCING NEW AS NEW
FOR EACH ROW
BEGIN
  SELECT SEC_GENEROS_OID.NEXTVAL INTO :NEW.OID_GENERO FROM DUAL;
END;
/
CREATE OR REPLACE TRIGGER INSERTAR_MUNICIPIO_OID
BEFORE INSERT ON MUNICIPIOS
REFERENCING NEW AS NEW
FOR EACH ROW
BEGIN
  SELECT SEC_MUNICIPIOS_OID.NEXTVAL INTO :NEW.OID_MUNICIPIO FROM DUAL;
END;
/
CREATE OR REPLACE TRIGGER INSERTAR_RENOVACION_OID
BEFORE INSERT ON RENOVACIONES
REFERENCING NEW AS NEW
FOR EACH ROW
BEGIN
  SELECT SEC_RENOVACIONES_OID.NEXTVAL INTO :NEW.OID_RENOVACION FROM DUAL;
END;
/
CREATE OR REPLACE TRIGGER INSERTAR_DEVOLUCION_OID
BEFORE INSERT ON DEVOLUCIONES
REFERENCING NEW AS NEW
FOR EACH ROW
BEGIN
  SELECT SEC_DEVOLUCIONES_OID.NEXTVAL INTO :NEW.OID_DEVOLUCION FROM DUAL;
END;
/
CREATE OR REPLACE PROCEDURE INSERTAR_AUTOR 
  (P_NOM IN AUTORES.NOMBRE%TYPE,
   P_APE IN AUTORES.APELLIDOS%TYPE) IS
BEGIN
  INSERT INTO AUTORES(NOMBRE,APELLIDOS) 
  VALUES (P_NOM,P_APE);
END;
/
CREATE OR REPLACE PROCEDURE INSERTAR_LIBRO 
  (P_TIT IN LIBROS.TITULO%TYPE,
   P_GEN IN LIBROS.GENERO%TYPE) IS
BEGIN
  INSERT INTO LIBROS(TITULO, GENERO)
  VALUES (P_TIT, P_GEN);
END;
/
CREATE OR REPLACE PROCEDURE INSERTAR_AUTORIA 
  (FK_AUT IN AUTORIAS.OID_AUTOR%TYPE,
   FK_LIB IN LIBROS.OID_LIBRO%TYPE) IS
BEGIN
  INSERT INTO AUTORIAS(OID_AUTOR,OID_LIBRO)
  VALUES (FK_AUT,FK_LIB);
END;
/
CREATE OR REPLACE PROCEDURE INSERTAR_PRESTAMO 
  (P_FEC IN PRESTAMOS.FECHA%TYPE,
   P_FEC_PRE IN PRESTAMOS.FECHA_PREVISTA%TYPE,
   FK_LIB IN PRESTAMOS.OID_LIBRO%TYPE,
   FK_USU IN PRESTAMOS.OID_USUARIO%TYPE) IS
BEGIN
  INSERT INTO PRESTAMOS(FECHA,FECHA_PREVISTA,OID_LIBRO,OID_USUARIO)
  VALUES (P_FEC,P_FEC_PRE,FK_LIB,FK_USU);
END;
/
CREATE OR REPLACE PROCEDURE INSERTAR_RENOVACION 
  (P_FEC IN RENOVACIONES.FECHA%TYPE,
   P_FEC_PRE IN PRESTAMOS.FECHA_PREVISTA%TYPE,
   FK_PRE IN RENOVACIONES.OID_PRESTAMO%TYPE) IS
BEGIN
  INSERT INTO RENOVACIONES(FECHA,OID_PRESTAMO)
  VALUES (P_FEC,FK_PRE);
  UPDATE PRESTAMOS SET FECHA_PREVISTA = P_FEC_PRE
  WHERE OID_PRESTAMO = FK_PRE;
END;
/
CREATE OR REPLACE PROCEDURE INSERTAR_DEVOLUCION 
  (P_FEC IN DEVOLUCIONES.FECHA%TYPE,
   FK_PRE IN DEVOLUCIONES.OID_PRESTAMO%TYPE) IS
BEGIN
  INSERT INTO DEVOLUCIONES(FECHA,OID_PRESTAMO)
  VALUES (P_FEC,FK_PRE);
END;
/
CREATE OR REPLACE PROCEDURE INSERTAR_USUARIO 
  (P_NIF IN USUARIOS.NIF%TYPE,
   P_NOM IN USUARIOS.NOMBRE%TYPE,
   P_APE IN USUARIOS.APELLIDOS%TYPE,
   P_DIR IN USUARIOS.DIRECCION%TYPE,
   P_MUN IN USUARIOS.OID_MUNICIPIO%TYPE,
   P_FECHA_NAC IN USUARIOS.FECHA_NACIMIENTO%TYPE,
   P_EMAIL IN USUARIOS.EMAIL%TYPE,
   P_PASS IN USUARIOS.PASS%TYPE,
   P_PERFIL IN USUARIOS.PERFIL%TYPE
   ) IS
BEGIN
  INSERT INTO USUARIOS(NIF, NOMBRE,APELLIDOS,DIRECCION,OID_MUNICIPIO, FECHA_NACIMIENTO, EMAIL, PASS, PERFIL)
  VALUES (P_NIF,P_NOM,P_APE,P_DIR,P_MUN, P_FECHA_NAC, P_EMAIL, P_PASS, P_PERFIL);
END;
/
create or replace PROCEDURE INSERTAR_GENERO_USUARIO 
  (FK_GEN IN GENEROS.OID_GENERO%TYPE,
   FK_USU IN USUARIOS.NIF%TYPE) IS
  oid_user USUARIOS.OID_USUARIO%type; 
--  oid_genre GENEROS.OID_GENERO%type;
BEGIN
	SELECT OID_USUARIO INTO oid_user FROM USUARIOS WHERE NIF = FK_USU;
	--SELECT OID_GENERO INTO oid_genre FROM GENEROS WHERE NOMBRE = FK_GEN;
	
    INSERT INTO GENEROSUSUARIOS(GENERO,USUARIO)
  	VALUES (FK_GEN,oid_user);
END;
/
CREATE OR REPLACE PROCEDURE INSERTAR_GENERO
  (P_NOM IN GENEROS.NOMBRE%TYPE) IS
BEGIN
  INSERT INTO GENEROS(NOMBRE)
  VALUES (P_NOM);
END;
/
CREATE OR REPLACE PROCEDURE INSERTAR_PROVINCIA 
  (P_NOM IN PROVINCIAS.NOMBRE%TYPE) IS
BEGIN
  INSERT INTO PROVINCIAS(NOMBRE)
  VALUES (P_NOM);
END;
/
CREATE OR REPLACE PROCEDURE INSERTAR_MUNICIPIO 
  (P_NOM IN MUNICIPIOS.NOMBRE%TYPE,
   P_PRO IN MUNICIPIOS.OID_PROVINCIA%TYPE) IS
BEGIN
  INSERT INTO MUNICIPIOS(NOMBRE,OID_PROVINCIA)
  VALUES (P_NOM,P_PRO);
END;
/
CREATE OR REPLACE PROCEDURE QUITAR_LIBRO (OID_LIBRO_A_QUITAR IN LIBROS.OID_LIBRO%TYPE) AS
  NUM_PRESTAMOS NUMBER;
BEGIN
  SELECT COUNT(*) INTO NUM_PRESTAMOS FROM PRESTAMOS WHERE PRESTAMOS.OID_LIBRO = OID_LIBRO_A_QUITAR;
  
  IF (NUM_PRESTAMOS <> 0) THEN
    RAISE_APPLICATION_ERROR(-20600,'No se puede quitar el libro porque ya tiene prï¿½stamos asignados');
  ELSE
    DELETE FROM AUTORIAS WHERE OID_LIBRO = OID_LIBRO_A_QUITAR;
    DELETE FROM LIBROS WHERE OID_LIBRO = OID_LIBRO_A_QUITAR;
  END IF;
END;
/
CREATE OR REPLACE PROCEDURE MODIFICAR_TITULO 
(OID_LIBRO_A_MOD IN LIBROS.OID_LIBRO%TYPE,
 TIT_LIBRO_A_MOD IN LIBROS.TITULO%TYPE) IS
BEGIN
  UPDATE LIBROS SET TITULO=TIT_LIBRO_A_MOD
  WHERE OID_LIBRO = OID_LIBRO_A_MOD;
END;
/
CREATE OR REPLACE PROCEDURE MODIFICAR_USUARIO 
(OID_USU_A_MOD IN USUARIOS.OID_USUARIO%TYPE,
 NOM_USU_A_MOD IN USUARIOS.NOMBRE%TYPE,
 APE_USU_A_MOD IN USUARIOS.APELLIDOS%TYPE,
 DIR_USU_A_MOD IN USUARIOS.DIRECCION%TYPE,
 OID_MUNI_A_MOD IN USUARIOS.OID_MUNICIPIO%TYPE) IS
BEGIN
  UPDATE USUARIOS
  SET NOMBRE=NOM_USU_A_MOD, APELLIDOS=APE_USU_A_MOD, 
	DIRECCION=DIR_USU_A_MOD, OID_MUNICIPIO=OID_MUNI_A_MOD
  WHERE OID_USUARIO = OID_USU_A_MOD;
END;
